name: 'Test-Deploy-Cypress'
permissions:
    actions: read
    contents: write
    security-events: write


on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - 'terraform-arm-infra/**'
  workflow_run:
    workflows: ["build-and-deploy"]
    branches: [main]
    types: 
      - completed
env:
    TF_WORKING_DIR: "terraform-arm-infra/"

defaults:
  run:
    shell: bash

jobs:
  unit-tests:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} || github.ref == 'refs/heads/main'
    name: 'Terraform Unit Tests'
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -backend=false

    # Validate terraform files
    - name: Terraform Validate
      run: terraform validate

    
    # Perform a security scan of the terraform code using checkov
    - name: Run Checkov action
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with: 
        framework: terraform
        output_file_path: console,results.sarif
        quiet: true
        soft_fail: true
        skip_check: CKV_AZURE_101,CKV_AZURE_140,CKV_AZURE_99,CKV_AZURE_100,CKV_AZURE_59,CKV_AZURE_33,CKV_AZURE_190,CKV_AZURE_206,CKV_AZURE_59,CKV_AZURE_33,CKV_AZURE_190,CKV_AZURE_206,CKV_AZURE_212,CKV_AZURE_1,CKV2_AZURE_38,CKV2_AZURE_33,CKV2_AZURE_18,CKV2_AZURE_1,CKV2_AZURE_21


    #Upload results to GitHub Advanced Security
    - name: Upload SARIF file
      if: success() || failure()
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: results.sarif

  deploy:
    name: 'Deploy'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    runs-on: ubuntu-latest

    needs:
      - unit-tests
    if: needs.unit-tests.result == 'success'
    steps:
    - name: Checkout
      uses: actions/checkout@v2      

    # - name: 'Terraform Format'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 0.14.8
    #     tf_actions_subcommand: 'fmt'
    #     tf_actions_working_dir: "./terraform-arm-infra"
        
    - name: 'Terraform Init'

      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./terraform-arm-infra"

    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./terraform-arm-infra"
        
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./terraform-arm-infra"

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./terraform-arm-infra"

  cypress-smoke-test:
    needs: 
      - unit-tests
      - deploy
    runs-on: ubuntu-22.04
    if: needs.unit-tests.result == 'success' && needs.deploy.result == 'success'
    steps:        
      - name: Checkout
        uses: actions/checkout@v3
      # Install npm dependencies, cache them correctly
      # and run all Cypress tests

      
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          command: npm run backend-func


      - name: Uploading artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-execution-report
          path: cypress/reports/html
          retention-days: 30

      - name: Reports deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
            branch: gh-pages
            folder: cypress/reports/html
    

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: elka
          SLACK_TITLE: Backend Function Smoke Test
          SLACK_MESSAGE: "New changes :rocket:"
          SLACK_COLOR: ${{ job.status }}
      
